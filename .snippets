# openssl
openssl rsa -in id_rsa -out id_rsa # 鍵を取り除く

# curl
curl -X POST -H "Content-Type: application/json" -d '{"key":"value"}' localhost
echo "{}" | curl URL -X POST -H "Content-Type: application/json" -d @-

# gem
sudo gem install cocoapods -n /usr/local/bin

# git
git archive master --output=master.tar.gz
git pull-request -b v4/master -m "[WIP] "
git rm --cached `git ls-files --full-name -i --exclude-from=.gitignore`
git reset --hard ^HEAD
git reset --soft HEAD^
git reset --merge
git remote set-branches origin '*' # unshallow後にremote branchを取得する
git log 3.14.2..rc-3.15.0 --merges --first-parent --reverse --pretty=format:"- %b(%s)" | sed -E 's/\(Merge pull request (#[0-9]+) from ..*$/ \1/'
git clean -f -d
git rev-list HEAD | wc -l | tr -d ' '
git branch --merged | grep -vE '^\*|master$|develop$' | xargs -I % git branch -d %

# for Pull Request (brew install ffmpeg)
ffmpeg -i input.mov -vf scale=320:-1 -an -r 10 output.gif
ffmpeg -i IMG_0077.MOV -vcodec copy -map 0:0 iOS_VoIP.mp4 # 音声を削除

# convert
mogrify -format pdf xx.svg

# empty commit
git ci --allow-empty -m "fixed #"

# ats
nscurl --ats-diagnostics --verbose https://

# android
keytool -v -list -keystore xxx.keystore

# for iOS Xcode
sudo xcode-select -s /Applications/Xcode.app/Contents/Developer
sudo xcode-select -s /Applications/Xcode_9_2.app/Contents/Developer
codesign -d --entitlements :- ios.app
codesign -vv -d ios.app
security find-identity -v -p codesigning
xcrun lipo -info 実行ファイル
otool -L ios.app/ios
rm -rf ~/Library/Developer/Xcode/DerivedData/*
rm -rf ~/Library/Caches/org.carthage.CarthageKit/DerivedData/*
xcrun instruments -w 'iPhone X'
instruments -s devices # udid list
xcrun simctl list | egrep '(Booted)'

## https://developer.apple.com/library/archive/technotes/tn2151/_index.html
export DEVELOPER_DIR=`xcode-select -p` && /Applications/Xcode.app/Contents/SharedFrameworks/DVTFoundation.framework/Resources/symbolicatecrash crashlog.crash xx.dSYM 
xcrun atos -o xxx.app/xxx 0x100f78000 0x000000010158bc58 # to class method
xcrun dwarfdump --uuid xxx.app/xxx # support architecture list
/Applications/Xcode.app/Contents/Applications/Application\ Loader.app/Contents/itms/bin/iTMSTransporter -m provider -account_type itunes_connect -p password -u email

# ssh
ssh-keygen -t rsa -b 4096 -C "Comment"

# android
apktool d a.apk
adb shell pm list packages | grep com.android.systemui
adb shell pm path com.android.systemui
adb pull /system/priv-app/SystemUI/SystemUI.apk

# mitmproxy
mitmproxy -p 8080

# xcode
open $(find . -name "*.xcworkspace" -depth 1 -print -quit)

# web check
watch -n 0.5 "wget -S --spider -nv --no-cache --no-cookies --no-dns-cache --user-agent='' https://.json -a ~/Desktop/xxx.log"

# unix
nmap -sT srea.jp
lsof -i:8080 # ポートを使ってるプロセス確認

# docker
docker build ./ -t imagenamee # from Dockerfile
docker run -d -p 4649:80 imagename # Dockerfile -> Image
docker exec -it ead3b5a857f5 /bin/bash # Image -> Container
